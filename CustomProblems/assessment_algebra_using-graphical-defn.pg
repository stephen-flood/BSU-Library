##DESCRIPTION
##  Problem Description
##ENDDESCRIPTION

##KEYWORDS('sample')

## DBsubject('Course')
## DBchapter('Section')
## DBsection('Subsection')
## Date('6/25/2018')
## Author('Stephen Flood')
## Institution('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')



########################################################################



DOCUMENT();

# Load whatever macros you need for the problem
loadMacros(
        "PGstandard.pl",     # Standard macros for PG language
        "PGcourse.pl",       
	"PGML.pl",
	"MathObjects.pl",
	# "PGchoicemacros.pl",	# For multiple select, multiple matching, and true/false questions
         "PGgraphmacros.pl",	   # For dynamic graphs
    	# "parserMultiAnswer.pl",  # For answer checkers that reference MULTIPLE answer blanks
    	# "parserPopUp.pl",	   # Create popup lists for selecting entries
    	# "contextInequalities.pl",
);


# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;
$refreshCachedImages=1;
#$gr->gifName($gr->gifName()."-$newProblemSeed"); # give graphics files names unique to each problem seed.

##############################################################
#  Setup

Context("Numeric");
# Context()->flags->set(tolerance => 0.01);
# Context()->variables->add(t => 'Real');
# See http://webwork.maa.org/wiki/Introduction_to_contexts for more options


## Generate the function


$xmax = 8;
$ymax = 8;


do {
    $x1   = random(-3,-2,1);
    $x2   = random(2,3,1);
    $vertex = Compute("($x1+$x2)/2");
    $unscaledf = Compute("(x-$x1)*(x-$x2)");
    $unscaledfvertex = $unscaledf->eval(x=>$vertex);
} while ($vertex == 0 || abs($unscaledfvertex) > 10);

$sign = list_random(-1,1); 

do { 
    $a = non_zero_random(-4,4,1); 
    $unscaledfa = abs($unscaledf->eval(x=>$a));
} while ( $a == $x1 || $a==$x2 );


do { 
    $preshifth = non_zero_random(1,3,1);
    $vshift = non_zero_random(-4,4,1); 
    $f = Compute("$sign*$preshifth/$unscaledfa*(x-$x1)*(x-$x2)+$vshift");
    $vertexh = $f->eval(x=>$vertex); 
    $fa = $f->eval(x=>$a);
} while ($vertexh == 0 || $fa == 0 || 
         abs($vertexh)<1 || 
         ($fa*$sign>0 )  ||
         abs( $fa-$vshift ) < 2 ||
         abs($vertexh) > $ymax-2
   ) ;




## Create the graph

$gr = init_graph(-$xmax,-$ymax,$xmax,$ymax,
axes=>[0,0],
#grid=>[16,16],
size=>[600,600]
);


$gr->h_grid("gray",1,2,3,4,5,6,7,-1,-2,-3,-4,-5,-6,-7);
$gr->v_grid("gray",1,2,3,4,5,6,7,-1,-2,-3,-4,-5,-6,-7);


foreach my $j (1..7) {
    $gr->lb( new Label(-0.25,  $j, $j,'black','center','middle'));
    $gr->lb( new Label(-0.25, -$j,-$j,'black','center','middle'));
    $gr->lb( new Label(  $j,-0.25, $j,'black','center','middle'));
    $gr->lb( new Label( -$j,-0.25,-$j,'black','center','middle'));
  }
# specify tickmarks
$gr->h_ticks(0,"black",1,2,3,4,5,6,-1,-2,-3,-4,-5,-6); # x-axis ticks entered as y-value, color, list of x-values
$gr->v_ticks(0,"black",1,2,3,4,5,6,-1,-2,-3,-4,-5,-6); # y-axis ticks entered as x-value, color, list of y-values


add_functions($gr, "$f for x in <-$xmax,$xmax>" . 
  " using color:blue and weight:2");
 
## For quickly checking randomization quality
##      graph the following to show the solutions.  
#add_functions($gr, "$vshift for x in <-$xmax,$xmax>" . 
#  " using color:red and weight:2");
#$gr->stamps( closed_circle($a,$fa,'red') );

#################################################
# Write Problem 
#
# PGML syntax at 
# 	http://webwork.maa.org/wiki/Introduction_to_PGML#.V8CReFQko2w
# 	http://webwork.maa.org/wiki/Category:PGML_Syntax#.V8DHHVQko2w


BEGIN_PGML

Let [`f(x) `] be defined by the following graph.  

[@ image( insertGraph($gr), 
width=>400,height=>400,tex_size=>800 ) @]*


1.  Use the graph above to evaluate [`f([$a])= `] [_____________________]{$fa}


2.  Use the graph above to solve for [`x`] in the equation [`f(x) = [$vshift]`].  
If there is more than one solution, enter your answer as a *comma separated list*  
[_______________________]{List("$x1,$x2")}  


*_Notation:_* To enter multiple solutions such as [`a`] and [`b`], you would enter [`a,b`]  
.  
.
END_PGML


ENDDOCUMENT();
