##DESCRIPTION
##  Problem Description
##ENDDESCRIPTION

##KEYWORDS('sample')
## DBsubject('Course')
## DBchapter('Section')
## DBsection('Subsection')
## Date('6/25/2018')
## Author('Stephen Flood')
## Institution('Bridgewater State University')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')



########################################################################



DOCUMENT();

# Load whatever macros you need for the problem
loadMacros(
        "PGstandard.pl",     # Standard macros for PG language
        "PGcourse.pl",       
	"PGML.pl",
	"MathObjects.pl",
	# "PGchoicemacros.pl",	# For multiple select, multiple matching, and true/false questions
         "PGgraphmacros.pl",	   # For dynamic graphs
    	# "parserMultiAnswer.pl",  # For answer checkers that reference MULTIPLE answer blanks
    	# "parserPopUp.pl",	   # Create popup lists for selecting entries
    	# "contextInequalities.pl",
);


# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;


##############################################################
#  Setup

Context("Numeric");
# Context()->flags->set(tolerance => 0.01);
Context()->variables->add(Q1 => 'Real', Q2 => 'Real', Q3 => 'Real', Q4 => 'Real');
# See http://webwork.maa.org/wiki/Introduction_to_contexts for more options

# Define Functions to get Exact numerators for typesetting automatically
sub sin_num {
    my ($parameter_name) = @_;
    my $output = "UNKNOWN";
    if ($parameter_name eq "pi/6"){ $output = ""; }
    if ($parameter_name eq "pi/4"){ $output = "\sqrt{2}"; }
    if ($parameter_name eq "pi/3"){ $output = "\sqrt{3}"; }
    return $output;
}
sub cos_num {
    my ($parameter_name) = @_;
    my $output = "UNKNOWN";
    if ($parameter_name eq "pi/3"){ $output = ""; }
    if ($parameter_name eq "pi/4"){ $output = "\sqrt{2}"; }
    if ($parameter_name eq "pi/6"){ $output = "\sqrt{3}"; }
    return $output;
}

# Randomly Pick Inside Angle
@insideangles = ("pi/3", "pi/4", "pi/6");
$thetaversion = random(0,2,1);
$phiversion = random(0,2,1);
$insideangletheta = $insideangles[$thetaversion];
$insideanglephi = $insideangles[$phiversion];

# Randomly Pick Coefficients for sine and cosine
$quarter_rho = random(2,3,1);
$half_rho = Compute("2*$quarter_rho");
$rho = Compute("4*$quarter_rho");
#
$signx = list_random("-","");
$signy = list_random("-","");
$signz = list_random("-","");
#
$xstring = $signx . $quarter_rho . sin_num($insideanglephi) . cos_num($insideangletheta);
$ystring = $signy . $quarter_rho . sin_num($insideanglephi) . sin_num($insideangletheta);
$zstring = $signz . $half_rho . cos_num($insideanglephi);


# Pick Phi
if($signz eq ""){
    $phi = Compute("$insideanglephi");
}
if($signz eq "-"){
    $phi = Compute("pi-$insideanglephi");
}


# Pick Theta
if($signx eq ""){
    if( $signy eq "" ){
#        $theta = $insideangletheta;
        $theta = Compute("$insideangletheta");
    }     
    if( $signy eq "-" ){
#        $theta = "2pi - (" . $insideangletheta . ")";
        $theta = Compute("2pi - $insideangletheta");
    }
}
if($signx eq "-"){
    if( $signy eq "" ){
#        $theta = "pi -  (" . $insideangletheta . ")";
         $theta = Compute("pi -  $insideangletheta ");
   }     
    if( $signy eq "-" ){
#        $theta = "pi + (" . $insideangletheta . ")";
         $theta = Compute("pi + $insideangletheta ");
   }
}

$theta = Real($theta)->with(period => 2*pi);


#################################################
# Write Problem 
#
# PGML syntax at 
# 	http://webwork.maa.org/wiki/Introduction_to_PGML#.V8CReFQko2w
# 	http://webwork.maa.org/wiki/Category:PGML_Syntax#.V8DHHVQko2w


BEGIN_PGML

Find a spherical coordinate representation [`(\rho,\theta,\varphi)`] with positive [`\rho`] for the point with Cartesian coordinates [`([$xstring],[$ystring],[$zstring])`].  

-----

[` \rho = `] [________________]{"$rho"}

[` \theta = `]  [__________]{$theta->with(period => 2*pi)}.

[` \varphi = `]  [__________]{$phi->with(period => 2*pi)}.

END_PGML


ENDDOCUMENT();
