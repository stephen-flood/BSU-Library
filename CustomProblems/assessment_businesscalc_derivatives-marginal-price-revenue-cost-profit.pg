##DESCRIPTION
##  A price/revenue/cost/profit problem, such that the profit function factors into integer terms. 
##ENDDESCRIPTION

##KEYWORDS('sample')

## DBsubject('Course')
## DBchapter('Section')
## DBsection('Subsection')
## Date('6/25/2018')
## Author('Stephen Flood')
## Institution('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')



########################################################################



DOCUMENT();

# Load whatever macros you need for the problem
loadMacros(
        "PGstandard.pl",     # Standard macros for PG language
        "PGcourse.pl",       
	"PGML.pl",
	"MathObjects.pl",
	# "PGchoicemacros.pl",	# For multiple select, multiple matching, and true/false questions
        # "PGgraphmacros.pl",	   # For dynamic graphs
    	# "parserMultiAnswer.pl",  # For answer checkers that reference MULTIPLE answer blanks
    	# "parserPopUp.pl",	   # Create popup lists for selecting entries
    	# "contextInequalities.pl",
);


# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;


##############################################################
#  Setup

Context("Numeric");
# Context()->flags->set(tolerance => 0.01);
# Context()->variables->add(t => 'Real');
# See http://webwork.maa.org/wiki/Introduction_to_contexts for more options


## Generate a nice problem, s.t. profit factors by hand, by first PICKING the break even points, and then working backwards

# Pick change in price due to change in number of units
# Note: this problem SHOULD work correctly for DECIMAL $a, as well as integer $a. 

$a   = random(-5,-2,1);
$n   = random(2,4,1);
# pick b so that profit is positive until at least x=19
$b   = Compute(" 20^($n-1)*-$a ");  
$c   = random(200,500,25);
$price = Compute("$a*x^$n + $b*x + $c");

# Fixed cost is irrelevant to MARGINAL profit
$fixedcost = random(100,1000,250);
# Variable cost equals the constant term of price, to make it easier to find roots.  
$variablecost   = $c;

# Now compute the price, revenue, cost, profit functions
$R = Compute("x*$price");
$C = Compute("$variablecost * x + $fixedcost");
$P = Compute("$R - $C");

# Pick a quantity of interest (interval comes from choice of coefficients above)
$givenx = random(3,18,1);
$nextx  = $givenx+1;

$marginalP = $P->D();
$marginalPatx = $marginalP->eval(x=>$givenx);
$actualP = $P->eval(x=>$nextx) - $P->eval(x=>$givenx);



#################################################
# Write Problem 
#
# PGML syntax at 
# 	http://webwork.maa.org/wiki/Introduction_to_PGML#.V8CReFQko2w
# 	http://webwork.maa.org/wiki/Category:PGML_Syntax#.V8DHHVQko2w


BEGIN_PGML

Suppose that you are planning on starting a 3D printing business. 

1.  Suppose that the price function is given by price per unit [`p = [$price]`].  Write down an equation for [`R(x)`], the revenue from selling [`x`] units.  
[____________________________________________]{$R}

2.  Your top choice printer has a fixed cost of [`[$fixedcost]`], and that the plastic costs $[`[$variablecost]`] per unit produced. 
Write an equation for [`C(x)`], the cost of producing [`x`] units.  
[____________________________________________]{$C}

3.  Find the profit function.  
[____________________________________________]{$P}

4.  Find the marginal profit function.  
[____________________________________________]{$marginalP}

5.  Use the marginal profit function to *approximate* the profit of the 11th unit.  
[____________________________________________]{$marginalPatx}

5.  Use the marginal profit function to find the *exact* profit from the 11th unit.  
[____________________________________________]{$actualP}


END_PGML


ENDDOCUMENT();
