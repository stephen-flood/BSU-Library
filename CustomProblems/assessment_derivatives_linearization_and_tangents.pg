##DESCRIPTION
##  Problem Description
##ENDDESCRIPTION

##KEYWORDS('sample')

## DBsubject('Course')
## DBchapter('Section')
## DBsection('Subsection')
## Date('3/23/2020')
## Author('Stephen Flood')
## Institution('Bridgewater State University')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')



########################################################################



DOCUMENT();

# Load whatever macros you need for the problem
loadMacros(
        "PGstandard.pl",     # Standard macros for PG language
        "PGcourse.pl",       
	"PGML.pl",
	"MathObjects.pl",
	# "PGchoicemacros.pl",	# For multiple select, multiple matching, and true/false questions
        # "PGgraphmacros.pl",	   # For dynamic graphs
    	# "parserMultiAnswer.pl",  # For answer checkers that reference MULTIPLE answer blanks
    	# "parserPopUp.pl",	   # Create popup lists for selecting entries
    	# "contextInequalities.pl",
);


# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;


##############################################################
#  Setup

Context("Numeric");
# Context()->flags->set(tolerance => 0.01);
# Context()->variables->add(t => 'Real');
# See http://webwork.maa.org/wiki/Introduction_to_contexts for more options


## Generate a function, making sure that the slope of the tangent is NOT zero
do{
    $a = non_zero_random(-1,1,1);

    $n1 = random(1,5,2) ;
    $n2 = random(2,6,2) ;

    $c1 = non_zero_random(-2,5,1) ;
    $c2 = non_zero_random(-2,5,1) ;
    $c3 = non_zero_random(-5,5,1) ;
    
    $function = Compute("$c1*x^$n1 + $c2*x^$n2 + $c3 ")->reduce();

    $fofa = $function->eval(x=>$a);
    $m = $function->D()->eval(x=>$a);
    
    $linearization = Compute("$m * (x - $a) + $fofa");
} until ( ($m != 0) && ($fofa != 0) ) ;

$difference = non_zero_random(-.5, .5, 0.1);
$test = Compute(" $a + $difference");

$approximation = $linearization->eval(x=>$test);



#################################################
# Write Problem 
#
# PGML syntax at 
# 	http://webwork.maa.org/wiki/Introduction_to_PGML#.V8CReFQko2w
# 	http://webwork.maa.org/wiki/Category:PGML_Syntax#.V8DHHVQko2w


BEGIN_PGML

Let [`f(x) = [$function] `]. 

a. Find the equation for the linear approximation to [`f(x)`] at [`a = [$a]`].  
[`L_{[$a]}(x) = `] [_____________________]{$linearization}

b. Use your answer to part (a) to approximate [`f([$test])`].  
[`f([$test]) = `] [_____________________]{$approximation}


END_PGML


ENDDOCUMENT();
